//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace QRCodeDemo.WebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://husc.com/", ConfigurationName="WebService.WebServiceHuscSoap")]
    public interface WebServiceHuscSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/SignUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSignUp(string username, string password, System.AsyncCallback callback, object asyncState);
        
        int EndSignUp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        int EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdate(QRCodeDemo.WebService.MyContact contact, string password, bool share, System.AsyncCallback callback, object asyncState);
        
        int EndUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/CheckUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCheckUser(string phone, System.AsyncCallback callback, object asyncState);
        
        int EndCheckUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/UpdateRelatioship", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginUpdateRelatioship(int myID, int frID, bool myS, bool myU, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateRelatioship(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/InsertNewRelationship", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginInsertNewRelationship(int myID, int frID, bool myU, bool myS, bool frU, bool frS, System.AsyncCallback callback, object asyncState);
        
        int EndInsertNewRelationship(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/AddFriendship", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginAddFriendship(int myid, string fr_phone, System.AsyncCallback callback, object asyncState);
        
        int EndAddFriendship(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/GetInfoFriend", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetInfoFriend(int myID, int frID, System.AsyncCallback callback, object asyncState);
        
        QRCodeDemo.WebService.MyContact EndGetInfoFriend(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/CheckRelationship", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginCheckRelationship(int myid, int frid, System.AsyncCallback callback, object asyncState);
        
        QRCodeDemo.WebService.QR_RELATIONSHIP EndCheckRelationship(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/DeleteFriends", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDeleteFriends(int myid, int frid, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteFriends(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/GetContactList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetContactList(int myid, string frPhone, System.AsyncCallback callback, object asyncState);
        
        int[] EndGetContactList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/myFriendUpdateInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginmyFriendUpdateInfo(int myId, System.AsyncCallback callback, object asyncState);
        
        QRCodeDemo.WebService.MyContact[] EndmyFriendUpdateInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://husc.com/GetContactFriendsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetContactFriendsList(int myid, string frPhone, bool share, System.AsyncCallback callback, object asyncState);
        
        QRCodeDemo.WebService.MyContact[] EndGetContactFriendsList(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://husc.com/")]
    public partial class MyContact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string phoneField;
        
        private string emailField;
        
        private string addressField;
        
        private string websiteField;
        
        private System.DateTime birthdayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("website");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("birthday");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://husc.com/")]
    public partial class QR_CONTACT : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string phoneField;
        
        private string addressField;
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Nullable<System.DateTime> birthdayField;
        
        private string emailField;
        
        private string websiteField;
        
        private System.Nullable<bool> shareField;
        
        private QR_RELATIONSHIP[] qR_RELATIONSHIPsField;
        
        private QR_RELATIONSHIP[] qR_RELATIONSHIPs1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<System.DateTime> birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
                this.RaisePropertyChanged("birthday");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("website");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<bool> share {
            get {
                return this.shareField;
            }
            set {
                this.shareField = value;
                this.RaisePropertyChanged("share");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public QR_RELATIONSHIP[] QR_RELATIONSHIPs {
            get {
                return this.qR_RELATIONSHIPsField;
            }
            set {
                this.qR_RELATIONSHIPsField = value;
                this.RaisePropertyChanged("QR_RELATIONSHIPs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=11)]
        public QR_RELATIONSHIP[] QR_RELATIONSHIPs1 {
            get {
                return this.qR_RELATIONSHIPs1Field;
            }
            set {
                this.qR_RELATIONSHIPs1Field = value;
                this.RaisePropertyChanged("QR_RELATIONSHIPs1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://husc.com/")]
    public partial class QR_RELATIONSHIP : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int id1Field;
        
        private int id2Field;
        
        private bool s1Field;
        
        private bool s2Field;
        
        private bool u1Field;
        
        private bool u2Field;
        
        private QR_CONTACT qR_CONTACTField;
        
        private QR_CONTACT qR_CONTACT1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id1 {
            get {
                return this.id1Field;
            }
            set {
                this.id1Field = value;
                this.RaisePropertyChanged("id1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int id2 {
            get {
                return this.id2Field;
            }
            set {
                this.id2Field = value;
                this.RaisePropertyChanged("id2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool s1 {
            get {
                return this.s1Field;
            }
            set {
                this.s1Field = value;
                this.RaisePropertyChanged("s1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool s2 {
            get {
                return this.s2Field;
            }
            set {
                this.s2Field = value;
                this.RaisePropertyChanged("s2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool u1 {
            get {
                return this.u1Field;
            }
            set {
                this.u1Field = value;
                this.RaisePropertyChanged("u1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool u2 {
            get {
                return this.u2Field;
            }
            set {
                this.u2Field = value;
                this.RaisePropertyChanged("u2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public QR_CONTACT QR_CONTACT {
            get {
                return this.qR_CONTACTField;
            }
            set {
                this.qR_CONTACTField = value;
                this.RaisePropertyChanged("QR_CONTACT");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public QR_CONTACT QR_CONTACT1 {
            get {
                return this.qR_CONTACT1Field;
            }
            set {
                this.qR_CONTACT1Field = value;
                this.RaisePropertyChanged("QR_CONTACT1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceHuscSoapChannel : QRCodeDemo.WebService.WebServiceHuscSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRelatioshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRelatioshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertNewRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertNewRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddFriendshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddFriendshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInfoFriendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInfoFriendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QRCodeDemo.WebService.MyContact Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QRCodeDemo.WebService.MyContact)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QRCodeDemo.WebService.QR_RELATIONSHIP Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QRCodeDemo.WebService.QR_RELATIONSHIP)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFriendsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFriendsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class myFriendUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public myFriendUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QRCodeDemo.WebService.MyContact[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QRCodeDemo.WebService.MyContact[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactFriendsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactFriendsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QRCodeDemo.WebService.MyContact[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QRCodeDemo.WebService.MyContact[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceHuscSoapClient : System.ServiceModel.ClientBase<QRCodeDemo.WebService.WebServiceHuscSoap>, QRCodeDemo.WebService.WebServiceHuscSoap {
        
        private BeginOperationDelegate onBeginSignUpDelegate;
        
        private EndOperationDelegate onEndSignUpDelegate;
        
        private System.Threading.SendOrPostCallback onSignUpCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDelegate;
        
        private EndOperationDelegate onEndUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckUserDelegate;
        
        private EndOperationDelegate onEndCheckUserDelegate;
        
        private System.Threading.SendOrPostCallback onCheckUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRelatioshipDelegate;
        
        private EndOperationDelegate onEndUpdateRelatioshipDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRelatioshipCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertNewRelationshipDelegate;
        
        private EndOperationDelegate onEndInsertNewRelationshipDelegate;
        
        private System.Threading.SendOrPostCallback onInsertNewRelationshipCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFriendshipDelegate;
        
        private EndOperationDelegate onEndAddFriendshipDelegate;
        
        private System.Threading.SendOrPostCallback onAddFriendshipCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInfoFriendDelegate;
        
        private EndOperationDelegate onEndGetInfoFriendDelegate;
        
        private System.Threading.SendOrPostCallback onGetInfoFriendCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckRelationshipDelegate;
        
        private EndOperationDelegate onEndCheckRelationshipDelegate;
        
        private System.Threading.SendOrPostCallback onCheckRelationshipCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFriendsDelegate;
        
        private EndOperationDelegate onEndDeleteFriendsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFriendsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactListDelegate;
        
        private EndOperationDelegate onEndGetContactListDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactListCompletedDelegate;
        
        private BeginOperationDelegate onBeginmyFriendUpdateInfoDelegate;
        
        private EndOperationDelegate onEndmyFriendUpdateInfoDelegate;
        
        private System.Threading.SendOrPostCallback onmyFriendUpdateInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactFriendsListDelegate;
        
        private EndOperationDelegate onEndGetContactFriendsListDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactFriendsListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WebServiceHuscSoapClient() {
        }
        
        public WebServiceHuscSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceHuscSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceHuscSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceHuscSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SignUpCompletedEventArgs> SignUpCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<UpdateCompletedEventArgs> UpdateCompleted;
        
        public event System.EventHandler<CheckUserCompletedEventArgs> CheckUserCompleted;
        
        public event System.EventHandler<UpdateRelatioshipCompletedEventArgs> UpdateRelatioshipCompleted;
        
        public event System.EventHandler<InsertNewRelationshipCompletedEventArgs> InsertNewRelationshipCompleted;
        
        public event System.EventHandler<AddFriendshipCompletedEventArgs> AddFriendshipCompleted;
        
        public event System.EventHandler<GetInfoFriendCompletedEventArgs> GetInfoFriendCompleted;
        
        public event System.EventHandler<CheckRelationshipCompletedEventArgs> CheckRelationshipCompleted;
        
        public event System.EventHandler<DeleteFriendsCompletedEventArgs> DeleteFriendsCompleted;
        
        public event System.EventHandler<GetContactListCompletedEventArgs> GetContactListCompleted;
        
        public event System.EventHandler<myFriendUpdateInfoCompletedEventArgs> myFriendUpdateInfoCompleted;
        
        public event System.EventHandler<GetContactFriendsListCompletedEventArgs> GetContactFriendsListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginSignUp(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignUp(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndSignUp(System.IAsyncResult result) {
            return base.Channel.EndSignUp(result);
        }
        
        private System.IAsyncResult OnBeginSignUp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginSignUp(username, password, callback, asyncState);
        }
        
        private object[] OnEndSignUp(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndSignUp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignUpCompleted(object state) {
            if ((this.SignUpCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignUpCompleted(this, new SignUpCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignUpAsync(string username, string password) {
            this.SignUpAsync(username, password, null);
        }
        
        public void SignUpAsync(string username, string password, object userState) {
            if ((this.onBeginSignUpDelegate == null)) {
                this.onBeginSignUpDelegate = new BeginOperationDelegate(this.OnBeginSignUp);
            }
            if ((this.onEndSignUpDelegate == null)) {
                this.onEndSignUpDelegate = new EndOperationDelegate(this.OnEndSignUp);
            }
            if ((this.onSignUpCompletedDelegate == null)) {
                this.onSignUpCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignUpCompleted);
            }
            base.InvokeAsync(this.onBeginSignUpDelegate, new object[] {
                        username,
                        password}, this.onEndSignUpDelegate, this.onSignUpCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginUpdate(QRCodeDemo.WebService.MyContact contact, string password, bool share, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdate(contact, password, share, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndUpdate(System.IAsyncResult result) {
            return base.Channel.EndUpdate(result);
        }
        
        private System.IAsyncResult OnBeginUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QRCodeDemo.WebService.MyContact contact = ((QRCodeDemo.WebService.MyContact)(inValues[0]));
            string password = ((string)(inValues[1]));
            bool share = ((bool)(inValues[2]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginUpdate(contact, password, share, callback, asyncState);
        }
        
        private object[] OnEndUpdate(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCompleted(object state) {
            if ((this.UpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAsync(QRCodeDemo.WebService.MyContact contact, string password, bool share) {
            this.UpdateAsync(contact, password, share, null);
        }
        
        public void UpdateAsync(QRCodeDemo.WebService.MyContact contact, string password, bool share, object userState) {
            if ((this.onBeginUpdateDelegate == null)) {
                this.onBeginUpdateDelegate = new BeginOperationDelegate(this.OnBeginUpdate);
            }
            if ((this.onEndUpdateDelegate == null)) {
                this.onEndUpdateDelegate = new EndOperationDelegate(this.OnEndUpdate);
            }
            if ((this.onUpdateCompletedDelegate == null)) {
                this.onUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDelegate, new object[] {
                        contact,
                        password,
                        share}, this.onEndUpdateDelegate, this.onUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginCheckUser(string phone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckUser(phone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndCheckUser(System.IAsyncResult result) {
            return base.Channel.EndCheckUser(result);
        }
        
        private System.IAsyncResult OnBeginCheckUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string phone = ((string)(inValues[0]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginCheckUser(phone, callback, asyncState);
        }
        
        private object[] OnEndCheckUser(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndCheckUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckUserCompleted(object state) {
            if ((this.CheckUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckUserAsync(string phone) {
            this.CheckUserAsync(phone, null);
        }
        
        public void CheckUserAsync(string phone, object userState) {
            if ((this.onBeginCheckUserDelegate == null)) {
                this.onBeginCheckUserDelegate = new BeginOperationDelegate(this.OnBeginCheckUser);
            }
            if ((this.onEndCheckUserDelegate == null)) {
                this.onEndCheckUserDelegate = new EndOperationDelegate(this.OnEndCheckUser);
            }
            if ((this.onCheckUserCompletedDelegate == null)) {
                this.onCheckUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckUserCompleted);
            }
            base.InvokeAsync(this.onBeginCheckUserDelegate, new object[] {
                        phone}, this.onEndCheckUserDelegate, this.onCheckUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginUpdateRelatioship(int myID, int frID, bool myS, bool myU, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRelatioship(myID, frID, myS, myU, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndUpdateRelatioship(System.IAsyncResult result) {
            return base.Channel.EndUpdateRelatioship(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRelatioship(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myID = ((int)(inValues[0]));
            int frID = ((int)(inValues[1]));
            bool myS = ((bool)(inValues[2]));
            bool myU = ((bool)(inValues[3]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginUpdateRelatioship(myID, frID, myS, myU, callback, asyncState);
        }
        
        private object[] OnEndUpdateRelatioship(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndUpdateRelatioship(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRelatioshipCompleted(object state) {
            if ((this.UpdateRelatioshipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRelatioshipCompleted(this, new UpdateRelatioshipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRelatioshipAsync(int myID, int frID, bool myS, bool myU) {
            this.UpdateRelatioshipAsync(myID, frID, myS, myU, null);
        }
        
        public void UpdateRelatioshipAsync(int myID, int frID, bool myS, bool myU, object userState) {
            if ((this.onBeginUpdateRelatioshipDelegate == null)) {
                this.onBeginUpdateRelatioshipDelegate = new BeginOperationDelegate(this.OnBeginUpdateRelatioship);
            }
            if ((this.onEndUpdateRelatioshipDelegate == null)) {
                this.onEndUpdateRelatioshipDelegate = new EndOperationDelegate(this.OnEndUpdateRelatioship);
            }
            if ((this.onUpdateRelatioshipCompletedDelegate == null)) {
                this.onUpdateRelatioshipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRelatioshipCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRelatioshipDelegate, new object[] {
                        myID,
                        frID,
                        myS,
                        myU}, this.onEndUpdateRelatioshipDelegate, this.onUpdateRelatioshipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginInsertNewRelationship(int myID, int frID, bool myU, bool myS, bool frU, bool frS, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertNewRelationship(myID, frID, myU, myS, frU, frS, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndInsertNewRelationship(System.IAsyncResult result) {
            return base.Channel.EndInsertNewRelationship(result);
        }
        
        private System.IAsyncResult OnBeginInsertNewRelationship(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myID = ((int)(inValues[0]));
            int frID = ((int)(inValues[1]));
            bool myU = ((bool)(inValues[2]));
            bool myS = ((bool)(inValues[3]));
            bool frU = ((bool)(inValues[4]));
            bool frS = ((bool)(inValues[5]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginInsertNewRelationship(myID, frID, myU, myS, frU, frS, callback, asyncState);
        }
        
        private object[] OnEndInsertNewRelationship(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndInsertNewRelationship(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertNewRelationshipCompleted(object state) {
            if ((this.InsertNewRelationshipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertNewRelationshipCompleted(this, new InsertNewRelationshipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertNewRelationshipAsync(int myID, int frID, bool myU, bool myS, bool frU, bool frS) {
            this.InsertNewRelationshipAsync(myID, frID, myU, myS, frU, frS, null);
        }
        
        public void InsertNewRelationshipAsync(int myID, int frID, bool myU, bool myS, bool frU, bool frS, object userState) {
            if ((this.onBeginInsertNewRelationshipDelegate == null)) {
                this.onBeginInsertNewRelationshipDelegate = new BeginOperationDelegate(this.OnBeginInsertNewRelationship);
            }
            if ((this.onEndInsertNewRelationshipDelegate == null)) {
                this.onEndInsertNewRelationshipDelegate = new EndOperationDelegate(this.OnEndInsertNewRelationship);
            }
            if ((this.onInsertNewRelationshipCompletedDelegate == null)) {
                this.onInsertNewRelationshipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertNewRelationshipCompleted);
            }
            base.InvokeAsync(this.onBeginInsertNewRelationshipDelegate, new object[] {
                        myID,
                        frID,
                        myU,
                        myS,
                        frU,
                        frS}, this.onEndInsertNewRelationshipDelegate, this.onInsertNewRelationshipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginAddFriendship(int myid, string fr_phone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFriendship(myid, fr_phone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int QRCodeDemo.WebService.WebServiceHuscSoap.EndAddFriendship(System.IAsyncResult result) {
            return base.Channel.EndAddFriendship(result);
        }
        
        private System.IAsyncResult OnBeginAddFriendship(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myid = ((int)(inValues[0]));
            string fr_phone = ((string)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginAddFriendship(myid, fr_phone, callback, asyncState);
        }
        
        private object[] OnEndAddFriendship(System.IAsyncResult result) {
            int retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndAddFriendship(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddFriendshipCompleted(object state) {
            if ((this.AddFriendshipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFriendshipCompleted(this, new AddFriendshipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFriendshipAsync(int myid, string fr_phone) {
            this.AddFriendshipAsync(myid, fr_phone, null);
        }
        
        public void AddFriendshipAsync(int myid, string fr_phone, object userState) {
            if ((this.onBeginAddFriendshipDelegate == null)) {
                this.onBeginAddFriendshipDelegate = new BeginOperationDelegate(this.OnBeginAddFriendship);
            }
            if ((this.onEndAddFriendshipDelegate == null)) {
                this.onEndAddFriendshipDelegate = new EndOperationDelegate(this.OnEndAddFriendship);
            }
            if ((this.onAddFriendshipCompletedDelegate == null)) {
                this.onAddFriendshipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFriendshipCompleted);
            }
            base.InvokeAsync(this.onBeginAddFriendshipDelegate, new object[] {
                        myid,
                        fr_phone}, this.onEndAddFriendshipDelegate, this.onAddFriendshipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginGetInfoFriend(int myID, int frID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInfoFriend(myID, frID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QRCodeDemo.WebService.MyContact QRCodeDemo.WebService.WebServiceHuscSoap.EndGetInfoFriend(System.IAsyncResult result) {
            return base.Channel.EndGetInfoFriend(result);
        }
        
        private System.IAsyncResult OnBeginGetInfoFriend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myID = ((int)(inValues[0]));
            int frID = ((int)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginGetInfoFriend(myID, frID, callback, asyncState);
        }
        
        private object[] OnEndGetInfoFriend(System.IAsyncResult result) {
            QRCodeDemo.WebService.MyContact retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndGetInfoFriend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInfoFriendCompleted(object state) {
            if ((this.GetInfoFriendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInfoFriendCompleted(this, new GetInfoFriendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInfoFriendAsync(int myID, int frID) {
            this.GetInfoFriendAsync(myID, frID, null);
        }
        
        public void GetInfoFriendAsync(int myID, int frID, object userState) {
            if ((this.onBeginGetInfoFriendDelegate == null)) {
                this.onBeginGetInfoFriendDelegate = new BeginOperationDelegate(this.OnBeginGetInfoFriend);
            }
            if ((this.onEndGetInfoFriendDelegate == null)) {
                this.onEndGetInfoFriendDelegate = new EndOperationDelegate(this.OnEndGetInfoFriend);
            }
            if ((this.onGetInfoFriendCompletedDelegate == null)) {
                this.onGetInfoFriendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInfoFriendCompleted);
            }
            base.InvokeAsync(this.onBeginGetInfoFriendDelegate, new object[] {
                        myID,
                        frID}, this.onEndGetInfoFriendDelegate, this.onGetInfoFriendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginCheckRelationship(int myid, int frid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckRelationship(myid, frid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QRCodeDemo.WebService.QR_RELATIONSHIP QRCodeDemo.WebService.WebServiceHuscSoap.EndCheckRelationship(System.IAsyncResult result) {
            return base.Channel.EndCheckRelationship(result);
        }
        
        private System.IAsyncResult OnBeginCheckRelationship(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myid = ((int)(inValues[0]));
            int frid = ((int)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginCheckRelationship(myid, frid, callback, asyncState);
        }
        
        private object[] OnEndCheckRelationship(System.IAsyncResult result) {
            QRCodeDemo.WebService.QR_RELATIONSHIP retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndCheckRelationship(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckRelationshipCompleted(object state) {
            if ((this.CheckRelationshipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckRelationshipCompleted(this, new CheckRelationshipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckRelationshipAsync(int myid, int frid) {
            this.CheckRelationshipAsync(myid, frid, null);
        }
        
        public void CheckRelationshipAsync(int myid, int frid, object userState) {
            if ((this.onBeginCheckRelationshipDelegate == null)) {
                this.onBeginCheckRelationshipDelegate = new BeginOperationDelegate(this.OnBeginCheckRelationship);
            }
            if ((this.onEndCheckRelationshipDelegate == null)) {
                this.onEndCheckRelationshipDelegate = new EndOperationDelegate(this.OnEndCheckRelationship);
            }
            if ((this.onCheckRelationshipCompletedDelegate == null)) {
                this.onCheckRelationshipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckRelationshipCompleted);
            }
            base.InvokeAsync(this.onBeginCheckRelationshipDelegate, new object[] {
                        myid,
                        frid}, this.onEndCheckRelationshipDelegate, this.onCheckRelationshipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginDeleteFriends(int myid, int frid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFriends(myid, frid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool QRCodeDemo.WebService.WebServiceHuscSoap.EndDeleteFriends(System.IAsyncResult result) {
            return base.Channel.EndDeleteFriends(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFriends(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myid = ((int)(inValues[0]));
            int frid = ((int)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginDeleteFriends(myid, frid, callback, asyncState);
        }
        
        private object[] OnEndDeleteFriends(System.IAsyncResult result) {
            bool retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndDeleteFriends(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFriendsCompleted(object state) {
            if ((this.DeleteFriendsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFriendsCompleted(this, new DeleteFriendsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFriendsAsync(int myid, int frid) {
            this.DeleteFriendsAsync(myid, frid, null);
        }
        
        public void DeleteFriendsAsync(int myid, int frid, object userState) {
            if ((this.onBeginDeleteFriendsDelegate == null)) {
                this.onBeginDeleteFriendsDelegate = new BeginOperationDelegate(this.OnBeginDeleteFriends);
            }
            if ((this.onEndDeleteFriendsDelegate == null)) {
                this.onEndDeleteFriendsDelegate = new EndOperationDelegate(this.OnEndDeleteFriends);
            }
            if ((this.onDeleteFriendsCompletedDelegate == null)) {
                this.onDeleteFriendsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFriendsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFriendsDelegate, new object[] {
                        myid,
                        frid}, this.onEndDeleteFriendsDelegate, this.onDeleteFriendsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginGetContactList(int myid, string frPhone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactList(myid, frPhone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int[] QRCodeDemo.WebService.WebServiceHuscSoap.EndGetContactList(System.IAsyncResult result) {
            return base.Channel.EndGetContactList(result);
        }
        
        private System.IAsyncResult OnBeginGetContactList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myid = ((int)(inValues[0]));
            string frPhone = ((string)(inValues[1]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginGetContactList(myid, frPhone, callback, asyncState);
        }
        
        private object[] OnEndGetContactList(System.IAsyncResult result) {
            int[] retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndGetContactList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactListCompleted(object state) {
            if ((this.GetContactListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactListCompleted(this, new GetContactListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactListAsync(int myid, string frPhone) {
            this.GetContactListAsync(myid, frPhone, null);
        }
        
        public void GetContactListAsync(int myid, string frPhone, object userState) {
            if ((this.onBeginGetContactListDelegate == null)) {
                this.onBeginGetContactListDelegate = new BeginOperationDelegate(this.OnBeginGetContactList);
            }
            if ((this.onEndGetContactListDelegate == null)) {
                this.onEndGetContactListDelegate = new EndOperationDelegate(this.OnEndGetContactList);
            }
            if ((this.onGetContactListCompletedDelegate == null)) {
                this.onGetContactListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactListCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactListDelegate, new object[] {
                        myid,
                        frPhone}, this.onEndGetContactListDelegate, this.onGetContactListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginmyFriendUpdateInfo(int myId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginmyFriendUpdateInfo(myId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QRCodeDemo.WebService.MyContact[] QRCodeDemo.WebService.WebServiceHuscSoap.EndmyFriendUpdateInfo(System.IAsyncResult result) {
            return base.Channel.EndmyFriendUpdateInfo(result);
        }
        
        private System.IAsyncResult OnBeginmyFriendUpdateInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myId = ((int)(inValues[0]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginmyFriendUpdateInfo(myId, callback, asyncState);
        }
        
        private object[] OnEndmyFriendUpdateInfo(System.IAsyncResult result) {
            QRCodeDemo.WebService.MyContact[] retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndmyFriendUpdateInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnmyFriendUpdateInfoCompleted(object state) {
            if ((this.myFriendUpdateInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.myFriendUpdateInfoCompleted(this, new myFriendUpdateInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void myFriendUpdateInfoAsync(int myId) {
            this.myFriendUpdateInfoAsync(myId, null);
        }
        
        public void myFriendUpdateInfoAsync(int myId, object userState) {
            if ((this.onBeginmyFriendUpdateInfoDelegate == null)) {
                this.onBeginmyFriendUpdateInfoDelegate = new BeginOperationDelegate(this.OnBeginmyFriendUpdateInfo);
            }
            if ((this.onEndmyFriendUpdateInfoDelegate == null)) {
                this.onEndmyFriendUpdateInfoDelegate = new EndOperationDelegate(this.OnEndmyFriendUpdateInfo);
            }
            if ((this.onmyFriendUpdateInfoCompletedDelegate == null)) {
                this.onmyFriendUpdateInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnmyFriendUpdateInfoCompleted);
            }
            base.InvokeAsync(this.onBeginmyFriendUpdateInfoDelegate, new object[] {
                        myId}, this.onEndmyFriendUpdateInfoDelegate, this.onmyFriendUpdateInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QRCodeDemo.WebService.WebServiceHuscSoap.BeginGetContactFriendsList(int myid, string frPhone, bool share, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactFriendsList(myid, frPhone, share, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QRCodeDemo.WebService.MyContact[] QRCodeDemo.WebService.WebServiceHuscSoap.EndGetContactFriendsList(System.IAsyncResult result) {
            return base.Channel.EndGetContactFriendsList(result);
        }
        
        private System.IAsyncResult OnBeginGetContactFriendsList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int myid = ((int)(inValues[0]));
            string frPhone = ((string)(inValues[1]));
            bool share = ((bool)(inValues[2]));
            return ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).BeginGetContactFriendsList(myid, frPhone, share, callback, asyncState);
        }
        
        private object[] OnEndGetContactFriendsList(System.IAsyncResult result) {
            QRCodeDemo.WebService.MyContact[] retVal = ((QRCodeDemo.WebService.WebServiceHuscSoap)(this)).EndGetContactFriendsList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactFriendsListCompleted(object state) {
            if ((this.GetContactFriendsListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactFriendsListCompleted(this, new GetContactFriendsListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactFriendsListAsync(int myid, string frPhone, bool share) {
            this.GetContactFriendsListAsync(myid, frPhone, share, null);
        }
        
        public void GetContactFriendsListAsync(int myid, string frPhone, bool share, object userState) {
            if ((this.onBeginGetContactFriendsListDelegate == null)) {
                this.onBeginGetContactFriendsListDelegate = new BeginOperationDelegate(this.OnBeginGetContactFriendsList);
            }
            if ((this.onEndGetContactFriendsListDelegate == null)) {
                this.onEndGetContactFriendsListDelegate = new EndOperationDelegate(this.OnEndGetContactFriendsList);
            }
            if ((this.onGetContactFriendsListCompletedDelegate == null)) {
                this.onGetContactFriendsListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactFriendsListCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactFriendsListDelegate, new object[] {
                        myid,
                        frPhone,
                        share}, this.onEndGetContactFriendsListDelegate, this.onGetContactFriendsListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override QRCodeDemo.WebService.WebServiceHuscSoap CreateChannel() {
            return new WebServiceHuscSoapClientChannel(this);
        }
        
        private class WebServiceHuscSoapClientChannel : ChannelBase<QRCodeDemo.WebService.WebServiceHuscSoap>, QRCodeDemo.WebService.WebServiceHuscSoap {
            
            public WebServiceHuscSoapClientChannel(System.ServiceModel.ClientBase<QRCodeDemo.WebService.WebServiceHuscSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSignUp(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("SignUp", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSignUp(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SignUp", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public int EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdate(QRCodeDemo.WebService.MyContact contact, string password, bool share, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = contact;
                _args[1] = password;
                _args[2] = share;
                System.IAsyncResult _result = base.BeginInvoke("Update", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Update", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckUser(string phone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = phone;
                System.IAsyncResult _result = base.BeginInvoke("CheckUser", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCheckUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CheckUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRelatioship(int myID, int frID, bool myS, bool myU, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = myID;
                _args[1] = frID;
                _args[2] = myS;
                _args[3] = myU;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRelatioship", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdateRelatioship(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateRelatioship", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertNewRelationship(int myID, int frID, bool myU, bool myS, bool frU, bool frS, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = myID;
                _args[1] = frID;
                _args[2] = myU;
                _args[3] = myS;
                _args[4] = frU;
                _args[5] = frS;
                System.IAsyncResult _result = base.BeginInvoke("InsertNewRelationship", _args, callback, asyncState);
                return _result;
            }
            
            public int EndInsertNewRelationship(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("InsertNewRelationship", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddFriendship(int myid, string fr_phone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myid;
                _args[1] = fr_phone;
                System.IAsyncResult _result = base.BeginInvoke("AddFriendship", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAddFriendship(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AddFriendship", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInfoFriend(int myID, int frID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myID;
                _args[1] = frID;
                System.IAsyncResult _result = base.BeginInvoke("GetInfoFriend", _args, callback, asyncState);
                return _result;
            }
            
            public QRCodeDemo.WebService.MyContact EndGetInfoFriend(System.IAsyncResult result) {
                object[] _args = new object[0];
                QRCodeDemo.WebService.MyContact _result = ((QRCodeDemo.WebService.MyContact)(base.EndInvoke("GetInfoFriend", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckRelationship(int myid, int frid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myid;
                _args[1] = frid;
                System.IAsyncResult _result = base.BeginInvoke("CheckRelationship", _args, callback, asyncState);
                return _result;
            }
            
            public QRCodeDemo.WebService.QR_RELATIONSHIP EndCheckRelationship(System.IAsyncResult result) {
                object[] _args = new object[0];
                QRCodeDemo.WebService.QR_RELATIONSHIP _result = ((QRCodeDemo.WebService.QR_RELATIONSHIP)(base.EndInvoke("CheckRelationship", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteFriends(int myid, int frid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myid;
                _args[1] = frid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteFriends", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteFriends(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteFriends", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactList(int myid, string frPhone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myid;
                _args[1] = frPhone;
                System.IAsyncResult _result = base.BeginInvoke("GetContactList", _args, callback, asyncState);
                return _result;
            }
            
            public int[] EndGetContactList(System.IAsyncResult result) {
                object[] _args = new object[0];
                int[] _result = ((int[])(base.EndInvoke("GetContactList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginmyFriendUpdateInfo(int myId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = myId;
                System.IAsyncResult _result = base.BeginInvoke("myFriendUpdateInfo", _args, callback, asyncState);
                return _result;
            }
            
            public QRCodeDemo.WebService.MyContact[] EndmyFriendUpdateInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                QRCodeDemo.WebService.MyContact[] _result = ((QRCodeDemo.WebService.MyContact[])(base.EndInvoke("myFriendUpdateInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactFriendsList(int myid, string frPhone, bool share, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = myid;
                _args[1] = frPhone;
                _args[2] = share;
                System.IAsyncResult _result = base.BeginInvoke("GetContactFriendsList", _args, callback, asyncState);
                return _result;
            }
            
            public QRCodeDemo.WebService.MyContact[] EndGetContactFriendsList(System.IAsyncResult result) {
                object[] _args = new object[0];
                QRCodeDemo.WebService.MyContact[] _result = ((QRCodeDemo.WebService.MyContact[])(base.EndInvoke("GetContactFriendsList", _args, result)));
                return _result;
            }
        }
    }
}
